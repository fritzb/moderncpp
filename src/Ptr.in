// Copyright (C) 1993-2002 David R. Cheriton.  All rights reserved.

#ifndef FWK_PTR_IN
#define FWK_PTR_IN

#include "Ptr.h"

#include <stdio.h>

template<class T>
Ptr<T>::Ptr( T * ptr  ) : value_(ptr) {
    if( value_ ) value_->newRef();
  }

template<class T>
Ptr<T>::Ptr( const Ptr<T>& mp ) : value_(mp.value_) {
    if( value_ ) value_->newRef();
  }

template<class T>
Ptr<T>::~Ptr() {
    if( value_) value_->deleteRef();
  }

template<class T> void
Ptr<T>::operator=( const Ptr<T>& mp ) {
    const T * save = value_;
    value_ = mp.value_; 
    if( value_ ) value_->newRef();
    if( save ) save->deleteRef();
  }

template<class T> void
Ptr<T>::operator=( Ptr<T>& mp ) {
    T * save = value_;
    value_ = mp.value_; 
    if( value_ ) value_->newRef();
    if( save ) save->deleteRef();
  }

#endif /* PTR_IN */
